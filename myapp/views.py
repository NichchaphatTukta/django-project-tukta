from django.shortcuts import render
from django.http import HttpResponse
from django.views import View
from django.views.generic import TemplateView
from django.http import HttpResponseRedirect
from django.urls import reverse


  # Create your views here.
def home(request):
    return HttpResponse("<h1>Hello Django!</h1>")

def about(request):
    return HttpResponse("<h1>About Page</h1>")

def function_view(request):
      context = {
          'page_title': 'Function-Based View',
          'page_heading': 'Welcome to the Function-Based View',
          'page_content': 'This is the content generated by the function-based view.',
      }
      return render(request, 'bootswatch.html', context)

def profile_view(request):
  context = {
      'page_title': 'Profile View',
      'page_heading': 'Welcome to My Profile View',
      'page_content': 'This is My Profile View generated by the function-based view.',
  }
  return render(request, 'profile.html', context)

def product_view(request):
  context = {
      'page_title': 'Product View',
      'page_heading': 'Welcome to Sweet Plum Cheese Pie Dessert',
      'page_content': 'Marian Plum - Fruit Star of Summer',
  }
  return render(request, 'product.html', context)

def specialmenu_view(request):
  context = {
      'page_title': 'Specialmenu View',
      'page_heading': 'Our special homemade menu',
      'page_content': 'Marian plum cheese pie',
  }
  return render(request, 'specialmenu.html', context)
  
def ourplum_view(request):
    context = {
        'page_title': 'OurPlum View',
        'page_heading': 'Our special sweet Marian Plum',
        'page_content': 'Characteristic of Sweet Marian Plum!',
    }
    return render(request, 'ourplum.html', context)

#class from which all class based views inherit
class BaseView(TemplateView):
    default_title = 'My Website'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context.setdefault('title', self.default_title)
        return context

class ClassView(BaseView):
  template_name = 'bootswatch.html'

  def get_context_data(self, **kwargs):
      context = super().get_context_data(**kwargs)
      context.update({
          'title': 'Class-Based View',
          'page_heading': 'Welcome to the Class-Based View',
          'page_content': 'This is the content generated by the class-based view.',
      })
      return context
    
class ThemeView(BaseView):
  template_name = 'theme.html'

  def get_context_data(self, **kwargs):
      context = super().get_context_data(**kwargs)
      # Add additional context data if needed
      return context

  def post(self, request, *args, **kwargs):
      theme = request.POST.get('theme')
      response = HttpResponseRedirect(reverse('theme'))
      response.set_cookie('theme', theme)
      return response

